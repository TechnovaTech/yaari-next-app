"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[619],{8619:function(e,t,n){n.r(t),n.d(t,{GoogleAuthWeb:function(){return GoogleAuthWeb}});var i=n(3103);let GoogleAuthWeb=class GoogleAuthWeb extends i.Uw{constructor(){super()}loadScript(){if("undefined"==typeof document)return;let e="gapi",t=null==document?void 0:document.getElementById(e);if(t)return;let n=document.getElementsByTagName("head")[0],i=document.createElement("script");i.type="text/javascript",i.defer=!0,i.async=!0,i.id=e,i.onload=this.platformJsLoaded.bind(this),i.src="https://apis.google.com/js/platform.js",n.appendChild(i)}initialize(e={clientId:"",scopes:[],grantOfflineAccess:!1}){var t,n;if("undefined"==typeof window)return;let i=null===(t=document.getElementsByName("google-signin-client_id")[0])||void 0===t?void 0:t.content,s=e.clientId||i||"";s||console.warn("GoogleAuthPlugin - clientId is empty"),this.options={clientId:s,grantOfflineAccess:null!==(n=e.grantOfflineAccess)&&void 0!==n&&n,scopes:e.scopes||[]},this.gapiLoaded=new Promise(e=>{window.gapiResolve=e,this.loadScript()}),this.addUserChangeListener()}platformJsLoaded(){gapi.load("auth2",()=>{let e={client_id:this.options.clientId,plugin_name:"CodetrixStudioCapacitorGoogleAuth"};this.options.scopes.length&&(e.scope=this.options.scopes.join(" ")),gapi.auth2.init(e),window.gapiResolve()})}async signIn(){return new Promise(async(e,t)=>{var n;try{let t;let i=null!==(n=this.options.grantOfflineAccess)&&void 0!==n&&n;if(i){let e=await gapi.auth2.getAuthInstance().grantOfflineAccess();t=e.code}else await gapi.auth2.getAuthInstance().signIn();let s=gapi.auth2.getAuthInstance().currentUser.get();i&&await s.reloadAuthResponse();let a=this.getUserFrom(s);a.serverAuthCode=t,e(a)}catch(e){t(e)}})}async refresh(){let e=await gapi.auth2.getAuthInstance().currentUser.get().reloadAuthResponse();return{accessToken:e.access_token,idToken:e.id_token,refreshToken:""}}async signOut(){return gapi.auth2.getAuthInstance().signOut()}async addUserChangeListener(){await this.gapiLoaded,gapi.auth2.getAuthInstance().currentUser.listen(e=>{this.notifyListeners("userChange",e.isSignedIn()?this.getUserFrom(e):null)})}getUserFrom(e){let t={},n=e.getBasicProfile();t.email=n.getEmail(),t.familyName=n.getFamilyName(),t.givenName=n.getGivenName(),t.id=n.getId(),t.imageUrl=n.getImageUrl(),t.name=n.getName();let i=e.getAuthResponse(!0);return t.authentication={accessToken:i.access_token,idToken:i.id_token,refreshToken:""},t}}}}]);